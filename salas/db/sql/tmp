-- 1º querry anidado
SELECT estudiante_id, estudiante_codigo FROM estudiante WHERE estudiante_id IN
    (SELECT impresion_estudiante FROM impresion GROUP BY (impresion_estudiante) HAVING COUNT(impresion_id)=50);
-- 2º querry anidado
SELECT * FROM objeto_en_inventario WHERE exists
    (SELECT * FROM computadora WHERE objeto_en_inventario.computadora_id = computadora.computadora_id);
-- 3º querry anidado
SELECT * FROM persona, estudiante WHERE persona_id = estudiante_persona AND EXISTS
    (SELECT * FROM responsable WHERE persona_id = responsable_persona);

-- 1º TRIGGER
  CREATE OR REPLACE FUNCTION eliminar_inventarios_computadora()
    RETURNS trigger AS $eic$
  BEGIN
   DELETE FROM objeto_en_inventario WHERE computadora_id = OLD.computadora_id;
   RETURN OLD;
  END;
  $eic$ LANGUAGE plpgsql;

  CREATE TRIGGER cuando_elimine_computadora
    BEFORE DELETE
    ON computadora
    FOR EACH ROW
    EXECUTE PROCEDURE eliminar_inventarios_computadora();
-- 2º TRIGGER + 4º querry anidado
  CREATE OR REPLACE FUNCTION backup_instalacion_software()
      RETURNS trigger AS $eic$
    BEGIN
      INSERT INTO software_computadora_backup (id_software_computadora, numero_serie_programa_backup,  comp_soft_fecha_instalacion_backup,  computadora_backup,  software_backup,  fecha_backup_s_c )
      (SELECT *,now() FROM computadora_software);
      RETURN OLD;
    END;
    $eic$ LANGUAGE plpgsql;

    CREATE TRIGGER cuando_elimine_software
      BEFORE DELETE
      ON computadora_software
      FOR EACH ROW
      EXECUTE PROCEDURE backup_instalacion_software();

-- 3º TRIGGER + 5º querry anidado
    CREATE OR REPLACE FUNCTION backup_prestamo()
      RETURNS trigger AS $eic$
    BEGIN
      INSERT INTO prestamo_backup (prestamo_id,prestamo_entrada_backup,prestamo_salida_backup,prestamo_comentarios_backup,prestamo_estudiante_backup,prestamo_computadora_backup,prestamo_backup_fecha_backup)
      (SELECT *,now() FROM prestamo);
      RETURN OLD;
    END;
    $eic$ LANGUAGE plpgsql;

    CREATE TRIGGER cuando_elimine_prestamo
      BEFORE DELETE
      ON prestamo
      FOR EACH ROW
      EXECUTE PROCEDURE backup_prestamo();
